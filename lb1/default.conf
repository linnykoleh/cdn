worker_processes  1;

events {
    worker_connections  1024;
}

http {
    # Define a cache zone
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_proxy_cache:10m max_size=1g inactive=1h use_temp_path=off;

    # Define cache status mapping
    map $upstream_cache_status  $cache_status {
        "MISS"       "MISS";
        "HIT"        "HIT";
        "BYPASS"     "BYPASS";
        "EXPIRED"    "EXPIRED";
        "STALE"      "STALE";
        "UPDATING"   "UPDATING";
        "REVALIDATED" "REVALIDATED";
        default      "MISS";
    }

    # Define cache bypass condition
    map $request_uri $cache_bypass {
        default 1;   # Bypass cache for all URIs by default
        "~*^/images/.*" 0;  # Do not bypass cache for image requests
    }

    # Define cache key for requests
    map $request_uri $cache_key {
        default "";  # No cache key by default
        "~*^/images/.*" $request_uri;  # Use request URI as the cache key for image requests
    }

    # Define upstream servers for Round Robin
    upstream cdn_nodes {
        server node1:80;
        server node2:80;
    }

    server {
        listen 80;  # The main server listens on port 80

        # Location for handling static files
        location / {
            root /usr/share/nginx/html;
            index index.html;

            # Add custom headers to show cache status and debug info
            add_header X-Cache-Status $cache_status always;
        }

        # Location for handling images with caching
        location /images/ {
            proxy_pass http://cdn_nodes;  # Load balance between node1 and node2
            proxy_cache my_proxy_cache;  # Use the defined cache zone
            proxy_cache_bypass $cache_bypass;  # Bypass cache if the condition is met
            proxy_no_cache $cache_bypass;  # Do not cache the response if the bypass condition is met
            proxy_cache_valid 200 1h;  # Cache 200 OK responses for 1 hour
            proxy_cache_key $cache_key;  # Use the cache key defined earlier

            # Add headers to show cache status and debug info
            add_header X-Cache-Status $cache_status always;
            add_header X-Cache-Key $cache_key always;
        }
    }

    # Define a second server to serve static files (the cache server)
    server {
        listen 3001;  # The cache server listens on port 3001

        location / {
            root /usr/share/nginx/html;  # Serve files from the standard Nginx directory
            index index.html;
        }
    }
}
